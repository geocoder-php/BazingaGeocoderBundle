<?xml version="1.0" ?>
<container xmlns="http://symfony.com/schema/dic/services"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="bazinga_geocoder.logger.class">Bazinga\Bundle\GeocoderBundle\Logger\GeocoderLogger</parameter>

        <parameter key="bazinga_geocoder.data_collector.class">Bazinga\Bundle\GeocoderBundle\DataCollector\GeocoderDataCollector</parameter>

        <parameter key="bazinga_geocoder.event_listener.fake_request.class">Bazinga\Bundle\GeocoderBundle\EventListener\FakeRequestListener</parameter>

        <parameter key="bazinga_geocoder.dumper_manager.class">Bazinga\Bundle\GeocoderBundle\DumperManager</parameter>
    </parameters>

    <services>


         <!-- Logger -->
        <service id="bazinga_geocoder.logger" class="%bazinga_geocoder.logger.class%">
            <tag name="monolog.logger" channel="bazinga_geocoder" />
            <argument type="service" id="logger" on-invalid="null" />
        </service>

        <!-- Data collector -->
        <service id="bazinga_geocoder.data_collector" class="%bazinga_geocoder.data_collector.class%" public="false">
            <tag name="data_collector" template="BazingaGeocoderBundle:Collector:geocoder" id="geocoder" />
            <argument type="service" id="bazinga_geocoder.logger" />
        </service>

        <!-- Listener -->
        <service id="bazinga_geocoder.event_listener.fake_request" class="%bazinga_geocoder.event_listener.fake_request.class%">
            <argument></argument>
            <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" />
        </service>
    </services>
</container>
